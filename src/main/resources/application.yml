###服务启动端口号
server:
  port: 8300
###服务名称(服务注册到eureka名称)  
spring:
  application:
    name: springCloud2-concumer
  #-------------下面的配置都在apollo中配置  
#  profiles: 
#    active: dev #设置环境配置文件--多环境配置
#  devtools:
#    restart:
#      enabled: true
      #热部署监听的包路径
#      additional-paths: com.fpq

#所调用的服务名称
#memberServer: springCloud2-provider


#security:
#  user:
#    name: admin
#    password: 123456
###服务注册到eureka地址
#eureka:
#  client:
#    service-url:
            #eureka客户端所注册的注册中心的url地址
#           defaultZone: http://192.168.1.111:8080/eureka
    #因为该应用为注册中心，不会注册自己
#    register-with-eureka: true
    #eureka客户端是否需要从eureka注册中心上获取注册信息
#    fetch-registry: true
      #eureka客户端从注册中心获取配置的时间间隔，单位秒
#    registry-fetch-interval-seconds: 30
    # 心跳检测检测与续约时间
  # 测试时将值设置设置小些，保证服务关闭后注册中心能及时踢出服务
#  instance:
    #Eureka客户端向服务端发送心跳的时间间隔，单位为秒（客户端告诉服务端自己会按照该规则）  
#    lease-renewal-interval-in-seconds: 1
    #Eureka服务端在收到最后一次心跳之后等待的时间上限，单位为秒，超过则剔除（客户端告诉服务端按照此规则等待自己）
#    lease-expiration-duration-in-seconds: 2   

#设置feign客户端是对ribbon进行了封装，springCloud中默认开启ribbon，设置ribbon的超时时间就可以了
#ribbon:
  #指的是建立连接所用的时间，适用于网络状况正常的情况下，两端连接所用的时间。
#  ReadTimeout: 5000
  #指的是建立连接后从服务器读取到可用资源所用的时间。若超过5000毫秒，则进行重试1次，若仍然失败则拒绝访问 
#  ConnectTimeout: 5000
#开启hystrix断路器，实现服务的高可用：服务降级，服务熔断，服务隔离
#feign:
#  hystrix:
#    enabled: true
# hystrix禁止服务超时时间，（原因：若在执行服务时间超过了设置的超时时间，则会执行fallBack方法，但此时原服务还在执行）
#hystrix:  
# command: 
#   default: 
#      execution: 
#       timeout: 
#        enabled: false

    
    